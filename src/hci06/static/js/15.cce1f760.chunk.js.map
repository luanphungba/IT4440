{"version":3,"sources":["pages/CreateReport/index.js"],"names":["Option","Select","TextArea","Input","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","message","success","error","Form","create","getFieldDecorator","form","history","taskDetail","useSelector","state","lstReport","global","dispatch","useDispatch","index","className","onSubmit","e","preventDefault","validateFieldsAndScroll","err","values","updateState","department","_id","length","push","Item","label","rules","required","initialValue","value","event","type","moment","Date","disabled","placeholder","censor","worker","valuePropName","getValueFromEvent","Array","isArray","htmlType"],"mappings":"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","file":"static/js/15.cce1f760.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  DatePicker,\n  Select,\n  Upload,\n  Icon,\n  message\n} from \"antd\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\n\nimport \"./style.css\";\n\nimport { updateState } from \"../../actions\";\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 20 },\n    sm: { span: 5 }\n  },\n  wrapperCol: {\n    xs: { span: 20 },\n    sm: { span: 16 }\n  }\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 5\n    }\n  }\n};\n\nconst props = {\n  name: \"file\",\n  action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n  headers: {\n    authorization: \"authorization-text\"\n  },\n  onChange(info) {\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  }\n};\n\nconst CreateReport = ({ form: { getFieldDecorator }, form, history }) => {\n  const taskDetail = useSelector(state => state.taskDetail);\n  console.log(\"TCL: taskDetail\", taskDetail);\n  const { lstReport } = useSelector(state => state.global);\n  const dispatch = useDispatch();\n\n  const { index = \"\", name = \"\" } = taskDetail;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        dispatch(\n          updateState({\n            lstReport: [\n              ...lstReport,\n              {\n                ...values,\n                department: \"Đảm bảo chất lượng\",\n                _id: lstReport.length && lstReport.length + 1\n              }\n            ]\n          })\n        );\n        history.push(\"/manage-report\");\n        console.log(\"Received values of form: \");\n      }\n    });\n  };\n\n  const handleSelectChange = value => {\n    console.log(value);\n  };\n\n  const normFile = e => {\n    console.log(\"Upload event:\", e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  const onChange = event => {};\n\n  return (\n    <div className=\"create-report\">\n      <div className=\"create-report-title\">Tạo báo cáo</div>\n      <Form {...formItemLayout} onSubmit={handleSubmit}>\n        <Form.Item label=\"Tên báo cáo\">\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: true,\n                message: \"Cần nhập tên báo cáo !\"\n              }\n            ],\n            initialValue: \"Báo cáo \" + taskDetail.name\n          })(<Input value={taskDetail.name} onChange={onChange} />)}\n        </Form.Item>\n        <Form.Item label=\"Ngày báo cáo\">\n          {getFieldDecorator(\"dateFinish\", {\n            rules: [\n              { type: \"object\", required: true, message: \"Please select time!\" }\n            ],\n            initialValue: moment(new Date(\"2019-10-18\"))\n          })(<DatePicker disabled placeholder={\"YYYY/MM/DD\"} />)}\n        </Form.Item>\n        <Form.Item label=\"Ngày hết hạn\">\n          {getFieldDecorator(\"finishDate\", {\n            rules: [\n              { type: \"object\", required: true, message: \"Please select time!\" }\n            ],\n            initialValue: moment(new Date(\"2019-12-28\"))\n          })(<DatePicker disabled placeholder={\"YYYY/MM/DD\"} />)}\n        </Form.Item>\n        <Form.Item label=\"Loại hình kiểm tra\">\n          {getFieldDecorator(\"gender\", {\n            rules: [{ required: true, message: \"Chọn loại hình kiểm tra !\" }],\n            initialValue: taskDetail.type\n          })(\n            <Select\n              onChange={handleSelectChange}\n              placeholder=\"Chọn loại hình kiểm tra\"\n            >\n              <Option value=\"Kiểm tra chất lượng quy trình xưởng thuốc nước thú y\">\n                Kiểm tra chất lượng quy trình xưởng thuốc nước thú y\n              </Option>\n              <Option value=\"Kiểm tra chất lượng quy trình xưởng thuốc bột thú y\">\n                Kiểm tra chất lượng quy trình xưởng thuốc bột thú y\n              </Option>\n              <Option value=\"Kiểm tra chất lượng quy trình xưởng thực phẩm chức năng\">\n                Kiểm tra chất lượng quy trình xưởng thực phẩm chức năng\n              </Option>\n              <Option value=\"Kiểm tra chất lượng bao bì cấp 2\">\n                Kiểm tra chất lượng bao bì cấp 2\n              </Option>\n              <Option value=\"Kiểm tra chất lượng nguyên liệu\">\n                Kiểm tra chất lượng nguyên liệu\n              </Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"Người đánh giá\">\n          {getFieldDecorator(\"censor\", {\n            rules: [\n              {\n                required: true,\n                message: \"Cần nhập tên người đánh giá !\"\n              }\n            ],\n            initialValue: taskDetail.censor\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Các tiêu chí\">\n          {getFieldDecorator(\"cac-tieu-chi\", {\n            rules: [\n              {\n                required: true,\n                message: \"Cần nhập các tiêu chí !\"\n              }\n            ],\n            initialValue: taskDetail.name\n          })(<TextArea />)}\n        </Form.Item>\n        {/* <Form.Item label=\"Kết quả đạt được\">\n          {getFieldDecorator(\"ket-qua-dat-duoc  \", {\n            rules: [\n              {\n                required: true,\n                message: \"Cần nhập các kết quả đạt được !\"\n              }\n            ]\n          })(<TextArea placeholder=\"Nhập kết quả đạt được\" />)}\n        </Form.Item> */}\n        <Form.Item label=\"Người thực hiện kiểm tra\">\n          {getFieldDecorator(\"worker\", {\n            rules: [\n              {\n                required: true,\n                message: \"Cần nhập tên người thực hiện kiểm tra !\"\n              }\n            ],\n            initialValue: taskDetail.worker\n          })(<Input disabled />)}\n        </Form.Item>\n        <Form.Item label=\"Mức độ hoàn thành\">\n          {getFieldDecorator(\"completed\", {\n            rules: [\n              {\n                required: true,\n                message: \"Cần nhập tên người thực hiện kiểm tra !\"\n              }\n            ],\n            initialValue: taskDetail.status + \"%\"\n          })(<Input placeholder=\"50%\" />)}\n        </Form.Item>\n        <Form.Item label=\"Kết quả kiểm tra chất lượng\">\n          {getFieldDecorator(\"ket-qua-kiem-tra-chat-luong\", {\n            rules: [\n              {\n                required: true,\n                message: \"Cần nhập các kết quả kiểm tra chất lượng !\"\n              }\n            ]\n          })(<TextArea placeholder=\"Nhập kết quả kiểm tra chất lượng\" />)}\n        </Form.Item>\n        <Form.Item label=\"File đính kèm\">\n          {getFieldDecorator(\"upload\", {\n            valuePropName: \"fileList\",\n            getValueFromEvent: normFile\n          })(\n            <Upload {...props}>\n              <Button>\n                <Icon type=\"upload\" /> Click to upload\n              </Button>\n            </Upload>\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Tạo\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Form.create({ name: \"create-report\" })(CreateReport);\n"],"sourceRoot":""}