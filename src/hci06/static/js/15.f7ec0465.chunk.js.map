{"version":3,"sources":["pages/CreateReport/index.js"],"names":["Option","Select","TextArea","Input","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","config","rules","type","required","message","connect","lstReport","global","dispatch","Form","create","name","getFieldDecorator","form","history","className","onSubmit","e","preventDefault","validateFieldsAndScroll","err","values","updateState","department","_id","length","push","console","log","Item","label","placeholder","onChange","value","valuePropName","getValueFromEvent","Array","isArray","fileList","action","listType","htmlType"],"mappings":"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","file":"static/js/15.f7ec0465.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, DatePicker, Select, Upload, Icon } from 'antd';\nimport { connect } from 'react-redux';\n\nimport './style.css';\n\nimport { updateState } from '../../actions';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 20 },\n    sm: { span: 5 }\n  },\n  wrapperCol: {\n    xs: { span: 20 },\n    sm: { span: 16 }\n  }\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 5\n    }\n  }\n};\n\nconst config = {\n  rules: [{ type: 'object', required: true, message: 'Please select time!' }]\n};\n\nconst CreateReport = ({\n  form: { getFieldDecorator },\n  form,\n  history,\n  dispatch,\n  lstReport\n}) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        dispatch(\n          updateState({\n            lstReport: [\n              ...lstReport,\n              {\n                ...values,\n                department: 'Kiểm tra chất lượng',\n                _id: lstReport.length && lstReport.length + 1\n              }\n            ]\n          })\n        );\n        history.push('/manage-report');\n        console.log('Received values of form: ');\n      }\n    });\n  };\n\n  const handleSelectChange = (value) => {\n    console.log(value);\n  };\n\n  const normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  return (\n    <div className='create-report'>\n      <div className='create-report-title'>Tạo cáo báo</div>\n      <Form {...formItemLayout} onSubmit={handleSubmit}>\n        <Form.Item label='Tên báo cáo'>\n          {getFieldDecorator('name', {\n            rules: [\n              {\n                required: true,\n                message: 'Cần nhập tên báo cáo !'\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label='Ngày báo cáo'>\n          {getFieldDecorator(\n            'finishDate',\n            config\n          )(<DatePicker placeholder={'YYYY/MM/DD'} />)}\n        </Form.Item>\n        <Form.Item label='Loại hình kiểm tra'>\n          {getFieldDecorator('gender', {\n            rules: [{ required: true, message: 'Chọn loại hình kiểm tra !' }]\n          })(\n            <Select\n              onChange={handleSelectChange}\n              placeholder='Chọn loại hình kiểm tra'\n            >\n              <Option value='Kiểm tra chất lượng quy trình xưởng thuốc nước thú y'>\n                Kiểm tra chất lượng quy trình xưởng thuốc nước thú y\n              </Option>\n              <Option value='Kiểm tra chất lượng quy trình xưởng thuốc bột thú y'>\n                Kiểm tra chất lượng quy trình xưởng thuốc bột thú y\n              </Option>\n              <Option value='Kiểm tra chất lượng quy trình xưởng thực phẩm chức năng'>\n                Kiểm tra chất lượng quy trình xưởng thực phẩm chức năng\n              </Option>\n              <Option value='Kiểm tra chất lượng bao bì cấp 2'>\n                Kiểm tra chất lượng bao bì cấp 2\n              </Option>\n              <Option value='Kiểm tra chất lượng nguyên liệu'>\n                Kiểm tra chất lượng nguyên liệu\n              </Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label='Người đánh giá'>\n          {getFieldDecorator('censor', {\n            rules: [\n              {\n                required: true,\n                message: 'Cần nhập tên người đánh giá !'\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        {/* <Form.Item label='Người thực hiện kiểm tra'>\n          {getFieldDecorator('worker', {\n            rules: [\n              {\n                required: true,\n                message: 'Cần nhập tên người thực hiện kiểm tra !'\n              }\n            ]\n          })(<Input />)}\n        </Form.Item> */}\n        <Form.Item label='Các tiêu chí'>\n          {getFieldDecorator('h', {\n            rules: [\n              {\n                required: true,\n                message: 'Cần nhập các tiêu chí !'\n              }\n            ]\n          })(<TextArea />)}\n        </Form.Item>\n        <Form.Item label='Kết quả đạt được'>\n          {getFieldDecorator('s', {\n            rules: [\n              {\n                required: true,\n                message: 'Cần nhập các kết quả đạt được !'\n              }\n            ]\n          })(<TextArea />)}\n        </Form.Item>\n        <Form.Item label='Người thực hiện kiểm tra'>\n          {getFieldDecorator('worker', {\n            rules: [\n              {\n                required: true,\n                message: 'Cần nhập tên người thực hiện kiểm tra !'\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label='Mức độ hoàn thành'>\n          {getFieldDecorator('completed', {\n            rules: [\n              {\n                required: true,\n                message: 'Cần nhập tên người thực hiện kiểm tra !'\n              }\n            ]\n          })(<Input placeholder='50%' />)}\n        </Form.Item>\n        <Form.Item label='Kết quả kiểm tra chất lượng'>\n          {getFieldDecorator('k', {\n            rules: [\n              {\n                required: true,\n                message: 'Cần nhập các kết quả kiểm tra chất lượng !'\n              }\n            ]\n          })(<TextArea />)}\n        </Form.Item>\n        <Form.Item label='File đính kèm'>\n          {getFieldDecorator('upload', {\n            valuePropName: 'fileList',\n            getValueFromEvent: normFile\n          })(\n            <Upload name='logo' action='/upload.do' listType='picture'>\n              <Button>\n                <Icon type='upload' /> Click to upload\n              </Button>\n            </Upload>\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type='primary' htmlType='submit'>\n            Tạo\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ global: { lstReport } }) => ({ lstReport });\nconst mapDispatchToProps = (dispatch) => ({ dispatch });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Form.create({ name: 'create-report' })(CreateReport));\n"],"sourceRoot":""}